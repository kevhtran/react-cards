{"ast":null,"code":"var _jsxFileName = \"/home/kev/springboard/exercises/react-effects-refs-demo/react-cards-pokemon/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const data = useAxios(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n  setCards(cards => [...cards, {\n    ...response.data,\n    id: uuid()\n  }]);\n  const addCard = async () => {\n    const response = await axios.get(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n    setCards(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCard,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.cards[0].image\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CardTable, \"qYNA40B9rnCYj1woS7XQfPT9d3o=\", false, function () {\n  return [useAxios];\n});\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","uuid","axios","PlayingCard","useAxios","jsxDEV","_jsxDEV","CardTable","_s","cards","setCards","data","response","id","addCard","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cardData","front","image","_c","defaultProps","$RefreshReg$"],"sources":["/home/kev/springboard/exercises/react-effects-refs-demo/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [cards, setCards] = useState([]);\n  const data = useAxios(\"https://deckofcardsapi.com/api/deck/new/draw/\")\n  setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n\n  const addCard = async () => {\n    const response = await axios.get(\n      \"https://deckofcardsapi.com/api/deck/new/draw/\"\n    );\n    setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  };\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={addCard}>Add a playing card!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(cardData => (\n          <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,SAAS;;AAE9B;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,IAAI,GAAGP,QAAQ,CAAC,+CAA+C,CAAC;EACtEM,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;IAAE,GAAGG,QAAQ,CAACD,IAAI;IAAEE,EAAE,EAAEZ,IAAI,CAAC;EAAE,CAAC,CAAC,CAAC;EAE/D,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMF,QAAQ,GAAG,MAAMV,KAAK,CAACa,GAAG,CAC9B,+CACF,CAAC;IACDL,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGG,QAAQ,CAACD,IAAI;MAAEE,EAAE,EAAEZ,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EACD,oBACEK,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BX,OAAA;MAAAW,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bf,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAQgB,OAAO,EAAER,OAAQ;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACNf,OAAA;MAAKU,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCR,KAAK,CAACc,GAAG,CAACC,QAAQ,iBACjBlB,OAAA,CAACH,WAAW;QAAmBsB,KAAK,EAAED,QAAQ,CAACf,KAAK,CAAC,CAAC,CAAC,CAACiB;MAAM,GAA5CF,QAAQ,CAACX,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAxBQD,SAAS;EAAA,QAEHH,QAAQ;AAAA;AAAAuB,EAAA,GAFdpB,SAAS;AA0BlBA,SAAS,CAACqB,YAAY,GAAG,CAAC,CAAC;AAE3B,eAAerB,SAAS;AAAC,IAAAoB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module"}